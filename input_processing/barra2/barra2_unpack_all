#!/usr/bin/env bash

# BARRA2 processing script (v2).
# The aim here is to create lots of small jobs in PBS, rather than creating
# a couple of large jobs which either timeout or run out of memory.

# Exit immediately if any command fails.
set -euo pipefail

module purge
module load pbs netcdf cdo nco moreutils python3

# Path to the BARRA2 dataset on gadi..
BARRA2_IN="/g/data/ob53/BARRA2/output/reanalysis/AUS-11/BOM/ERA5"

# Output path.
BARRA2_OUT="/g/data/vl59/barra2"

# Could be 1hr, 3hr, day, fx, mon
TIMESTEP="1hr"

# Directory in which log files will be written.
LOG_DIR="${BARRA2_OUT}/logs"

# Directory in which wrapper scripts will be written.
SCRIPT_DIR="${BARRA2_OUT}/scripts"

# Job status updates for the mergetime job will be sent to this email address.
EMAIL="d.holzworth@westernsydney.edu.au"

# Variables to be processed.
VARS="huss
pr
ps
rsds
sfcWind
tas
tasmax
tasmin"

# This is only used for display (ie logging) purposes.
DATASET_NAME="BARRA2"

# Version of data to be processed.
VERSION="v20231001"

# Storage devices required by PBS.
STORAGE=gdata/ob53+gdata/vl59+gdata/pr09

# todo: make this a CLI argument
SCENARIO=historical

# Create directory tree.
mkdir -p "${LOG_DIR}"
mkdir -p "${SCRIPT_DIR}"

# Arguments which will be common to all invocations of pbs_wrap.
PBS_ARGS="-l ${LOG_DIR} -s ${STORAGE}"

# Unpack the specified file.
# This requires about 10GiB of memory and ~3 minutes walltime for a 1GiB file.
# All up it's about 0.2 KSUs.
UNPACK_IDS=
unpack() {
    VAR="${1}"
    YEAR="${2}"

    # Directory containing input files.
    IN_DIR="${BARRA2_IN}/${SCENARIO}/hres/BARRA-R2/v1/${TIMESTEP}/${VAR}/${VERSION}"

    # Files to be unpacked.
    IN_FILES="${IN_DIR}"/*_${YEAR}??-${YEAR}??.nc

    if [ -z "${IN_FILES}" ]; then die "Failed to find input files for ${VAR} year ${YEAR}"; fi

    # Directory into which output files will be saved.
    OUT_DIR="${BARRA2_OUT}/processed/${VAR}"
    mkdir -p "${OUT_DIR}"

    JOB_NAME="unpack_${VAR}_${YEAR}"
    SCRIPT="${SCRIPT_DIR}/${JOB_NAME}"
    UNPACK_ARGS="-c 1 -m 32 -q hugemem -w 04:00:00 -o ${SCRIPT} -n ${JOB_NAME} ${PBS_ARGS}"
    pbs_wrap ${UNPACK_ARGS} -- /home/590/dh7190/code/lpj-guess/scripts/input_processing/unpack_files ${OUT_DIR} ${IN_FILES}
    JOB_ID="$(qsub "${SCRIPT}")"
    if [ -z "${UNPACK_IDS}" ]
    then
        UNPACK_IDS="${JOB_ID}"
    else
        UNPACK_IDS="${UNPACK_IDS}:${JOB_ID}"
    fi
}

mergetime() {
    VAR="${1}"
    OUT_FILE="${2}"

    JOB_NAME="mergetime_${VAR}"
    SCRIPT="${SCRIPT_DIR}/${JOB_NAME}"
    RESOURCES="-c 1 -m 32 -q hugemem -w 48:00:00"
    MERGE_ARGS="${RESOURCES} ${PBS_ARGS} -o ${SCRIPT} -n ${JOB_NAME} -e ${EMAIL}"
    if [ -n "${UNPACK_IDS}" ]
    then
        MERGE_ARGS="${MERGE_ARGS} -d ${UNPACK_IDS}"
    fi

    # Directory into which output files will be saved.
    IN_DIR="${BARRA2_OUT}/processed/${VAR}"
    
    rm -f "${OUT_FILE}"
    pbs_wrap ${MERGE_ARGS} -- cdo -O mergetime "${IN_DIR}"/*.nc "${OUT_FILE}"
    qsub "${SCRIPT}"
}

reorder() {
    IN_FILE="${1}"
    OUT_FILE="${2}"
    DEPENDENCIES="${3}"

    FILE_NAME="$(basename "${IN_FILE}")"
    VAR="$(echo "${FILE_NAME}" | cut -d_ -f1)"

    JOB_NAME="reorder_${VAR}"
    SCRIPT="${SCRIPT_DIR}/${JOB_NAME}"

    RESOURCES="-c 1 -m 128 -q hugemem -w 48:00:00"
    ARGS="${RESOURCES} ${PBS_ARGS} -o ${SCRIPT} -n ${JOB_NAME} -e ${EMAIL} -d ${DEPENDENCIES}"

    rm -f "${OUT_FILE}"
    pbs_wrap ${ARGS} -- ncpdq -O -a lon,lat,time "${IN_FILE}" "${OUT_FILE}"
    qsub "${SCRIPT}"
}

rechunk() {
    IN_FILE="${1}"
    OUT_FILE="${2}"
    DEPENDENCIES="${3}"

    FILE_NAME="$(basename "${IN_FILE}")"
    VAR="$(echo "${FILE_NAME}" | cut -d_ -f1)"

    JOB_NAME="rechunk_${VAR}"
    SCRIPT="${SCRIPT_DIR}/${JOB_NAME}"

    RESOURCES="-c 1 -m 128 -q hugemem -w 48:00:00"
    ARGS="${RESOURCES} ${PBS_ARGS} -o ${SCRIPT} -n ${JOB_NAME} -e ${EMAIL} -d ${DEPENDENCIES}"

    rm -f "${OUT_FILE}"
    pbs_wrap ${ARGS} -- nccopy -c lon/1,lat/1,time/365 "${IN_FILE}" "${OUT_FILE}"
    qsub "${SCRIPT}"
}

for VAR in ${VARS}
do
    UNPACK_IDS=
    for YEAR in {1979..2023}
    do
        unpack "${VAR}" "${YEAR}"
    done
    OUT_FILE="${BARRA2_OUT}/processed/${VAR}_AUS-11_ERA5_${SCENARIO}_hres_BOM_BARRA-R2_v1_${TIMESTEP}.nc"
    MERGE_ID="$(mergetime "${VAR}" "${OUT_FILE}")"

    REORDER_OUT="${OUT_FILE/.nc/_reorder.nc}"
    REORDER_ID="$(reorder "${OUT_FILE}" "${REORDER_OUT}" "${MERGE_ID}")"

    RECHUNK_OUT="${REORDER_OUT/.nc/_rechunk.nc}"
    RECHUNK_ID="$(rechunk "${REORDER_OUT}" "${RECHUNK_OUT}" "${REORDER_ID}")"
done
