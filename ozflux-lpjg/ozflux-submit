#!/usr/bin/env bash
#
# Script to submit ozflux runs
#
# This is a really quick and dirty wrapper script which calls submit_to_gadi for
# each ozflux site. This should really be cleaned up a bit. For now, to run it,
# place this script inside the lpjguess_dave_lsm/benchmarks/ozflux directory
# and run it. Note that this will not actually qsub the individual jobs. To do
# this, run the script after removing the `-d` argument (aka `--dry-run`) to the
# submit_to_gadi invocation. You'll also need to copy the forcing data into the
# output directory in a suitable location.
#
set -euo pipefail

# If environment variable DEBUG is set to 1, run in debug mode.
if [ "${DEBUG:-}" = 1 ]
then
  echo "Running in debug mode. Set DEBUG to 0 to disable."
  set -x
fi

SUBMIT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd -P)"
CONF_PRIMARY="$(readlink -f ozflux-runs.conf)"

for SITE_DIR in `find "${SUBMIT_DIR}" -maxdepth 1 -type d`
do
	# Data is not a site...
	if [ "${SITE_DIR}" == "${SUBMIT_DIR}/data" -o \
             "${SITE_DIR}" == "${SUBMIT_DIR}" ]; then continue; fi

	# Extract site name.
	SITE="$(basename "${SITE_DIR}")"

	if [ -d "${SITE_DIR}/${SITE}" ]; then rm -rf "${SITE_DIR}/${SITE}"; fi

	# Site-specific settings.
	INSFILE="${SITE_DIR}/${SITE}.ins"

	# ::TEMP HACK::
	# Change path to met data to use 3-hourly data.
	sed -ri 's/num 24/num 8/g' "${INSFILE}"

	OUT_DIR="/scratch/pt17/dh7190/ozflux-runs/3h"
	EXPERIMENT="${SITE}"

	mkdir -p "${OUT_DIR}"

	# Create site run config file.
	SITE_CONF="$(mktemp --tmpdir --suffix=.conf "${SITE}XXX")"

	# Insert site-specific settings.
	cat <<EOF > "${SITE_CONF}"
## Path to ins file from run directory. Can be absolute or relative.
## ${SUBMIT_DIR} is the directory of the submit script.
INSFILE="${INSFILE}"

## Outut path. Don't use ~ expansion for home directory!
OUT_DIR="${OUT_DIR}"

## Experiment name. Outputs will be saved to a directory with this name.
EXPERIMENT="${EXPERIMENT}"
EOF

# Append the other settings which are common to all sites.
cat "${CONF_PRIMARY}" >>"${SITE_CONF}"

pushd "${SITE_DIR}" >/dev/null 2>&1
submit_to_gadi.sh -d -s "${SITE_CONF}"
popd >/dev/null 2>&1
rm "${SITE_CONF}"

done
