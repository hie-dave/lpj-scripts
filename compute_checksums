#!/usr/bin/env bash

# Exit immediately if:
# - Any command fails
# - Any part of a pipeline fails
# - We reference any unbound variables
set -euo pipefail

# If environment variable DEBUG is set to 1, run in debug mode.
if [ "${DEBUG:-}" = 1 ]
then
    echo "Running in debug mode. Set DEBUG to 0 to disable."
    set -x
fi

die() { echo $*; exit 1; }

if [ $# -ne 3 ]; then die "Usage: ${0} <base dir> <out file> <PBS storage devices>"; fi

BASE_DIR="${1}"
OUT_FILE="${2}"
PBS_STORAGE="${3:-}"

# Generate PBS script.
JOB_NAME="compute_checksums_$(basename "${BASE_DIR}")"
SCRIPT_FILE="${BASE_DIR}/${JOB_NAME}"
LOG_FILE="${BASE_DIR}/${JOB_NAME}.log"

rm -f "${LOG_FILE}"

# PBS job priority in range [-1024, 1023]. Higher priority means the job will
# (in theory) be scheduled to run sooner.
PRIORITY=0

cat <<EOF >"${SCRIPT_FILE}"
#!/usr/bin/env bash
#PBS -l ncpus=1
#PBS -l walltime=48:00:00
#PBS -l mem=4GB
#PBS -q normal
#PBS -l wd
#PBS -j oe
#PBS -m abe
#PBS -M d.holzworth@westernsydney.edu.au
#PBS -P pt17
#PBS -p ${PRIORITY}
#PBS -l storage=${PBS_STORAGE}
#PBS -N ${JOB_NAME}
#PBS -o ${LOG_FILE}

set -euo pipefail

BASE_DIR="${BASE_DIR}"
OUT_FILE="${OUT_FILE}"

cd "\${BASE_DIR}"
find . -type f -exec sha256sum {} \; >"\${OUT_FILE}"

EOF
chmod u+x "${SCRIPT_FILE}"
qsub "${SCRIPT_FILE}"
